version: "3.8"

services:
  # osrm-builder:
  #   image: osrm/osrm-backend:latest
  #   container_name: osrm-builder
  #   command: >
  #     bash -c "
  #       osrm-extract -p /opt/car.lua /data/vietnam-latest.osm.pbf &&
  #       osrm-partition /data/vietnam-latest.osrm &&
  #       osrm-customize /data/vietnam-latest.osrm
  #     "
  #   volumes:
  #     - ./data:/data
  #   depends_on:
  #     - postgis
  #   restart: "no"

  osrm-server:
    image: osrm/osrm-backend:latest
    container_name: osrm-server
    command: >
      osrm-routed --algorithm mld /data/vietnam-latest.osrm
    volumes:
      - ./data:/data
    ports:
      - "3000:5000"
    # depends_on:
    # - osrm-builder
    restart: unless-stopped

  place-raw:
    image: postgres:16
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.8.0
    container_name: zk
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-net
    volumes:
      - ./zookeeper-data:/confluentinc/zookeeper

  kafka:
    image: confluentinc/cp-kafka:7.8.0
    container_name: kafka-broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      # bạn có thể mở 29092 nếu muốn listener nội bộ
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka-broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - kafka-net
    volumes:
      - ./kafka-data:/confluentinc/kafka

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - elasticnet

  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - elasticnet

networks:
  kafka-net:
    driver: bridge
  elasticnet:
    driver: bridge

volumes:
  postgis_data:
  postgres_data:
  es_data:
